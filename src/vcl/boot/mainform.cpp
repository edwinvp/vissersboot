//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "mainform.h"
#include "fakeio.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TMainFrm *MainFrm;
//---------------------------------------------------------------------------
#define pi 3.1415926535897932384626433832795f
//---------------------------------------------------------------------------
__fastcall TMainFrm::TMainFrm(TComponent* Owner)
	: TForm(Owner)
{
	//da.SetZoomFactor(8400000);
	da.SetZoomFactor(10000);

	vessel.heading = 40.0f;
	vessel.position.lat = 51.9364818f;
	vessel.position.lon = 4.5162849f;
	vessel.speed = 0;


	main_init();
}
//---------------------------------------------------------------------------
void __fastcall TMainFrm::Timer1Timer(TObject *Sender)
{
	prog_ms += Timer1->Interval;

	if (CbRemoteCtrlOn->Checked) {
		pd5_pulse_duration=SbMotorV->Position;
		pd6_pulse_duration=SbMotorH->Position;
		pd3_pulse_duration=4000 - (SbPos->Position - 2000);
		pb3_pulse_duration=SbManAuto->Position;
	} else {
		// If the remote is off, no servo waveform is
		// generated by the receiver. So zeroes.
		pd6_pulse_duration=0;
		pd5_pulse_duration=0;
		pd3_pulse_duration=0;
		pb3_pulse_duration=0;
	}

	process();

	if (prog_op.Length()) {
		if (ListBox1->Items->Count > 5)
			ListBox1->Clear();

		ListBox1->Items->Add(prog_op);
		prog_op="";
	}

	if (PORTB & _BV(PORTB5))
		ShLed->Brush->Color=clRed;
	else
		ShLed->Brush->Color=clBlack;


	vessel.motor_left = -(SbMotorL->Position / 100.0);
	vessel.motor_right = -(SbMotorR->Position / 100.0);

	vessel.CalcSpeedAndHeading();
	vessel.Move(Timer1->Interval);
	//vessel.heading += 0.2;

	da.SetScreenDims(PaintBox1->Width,PaintBox1->Height);

	da.RenderTo(PaintBox1->Canvas,vessel);

}
//---------------------------------------------------------------------------
void __fastcall TMainFrm::Button1Click(TObject *Sender)
{
	TGpsLoc loc;
	loc.lat = 48.117300;
	loc.lon = 11.516667;

	UnicodeString sRMC = loc.GetGPRMC();
	Edit1->Text = sRMC;

	for (int i(1);i<=sRMC.Length();++i) {
		Fake_UART_ISR(sRMC[i]);
		process();
	}
}
//---------------------------------------------------------------------------

void __fastcall TMainFrm::OnZoomFactKeyDown(TObject *Sender, WORD &Key, TShiftState Shift)

{
	if (Key==VK_RETURN) {
		da.SetZoomFactor(EdZoomFactor->Text.ToDouble());
	}
}
//---------------------------------------------------------------------------

